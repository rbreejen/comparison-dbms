item,description,is_advanced,Oracle,MySQL,PostgreSQL,CockroachDB,Yugabyte,Snowflake,Databricks,Clickhouse,Doris,DuckDB,TiDB,SingleStore
<div class = 'item-title'>Key facts</div>,,FALSE,[Homepage >>](https://www.oracle.com/),[Homepage >>](https://www.mysql.com/),[Homepage >>](https://www.postgresql.org/),[Homepage >>](https://www.cockroachlabs.com/),[Homepage >>](https://www.yugabyte.com/),[Homepage >>](https://www.snowflake.com/en/),[Homepage >>](https://www.databricks.com/),[Homepage >>](https://clickhouse.com/),[Homepage >>](https://doris.apache.org/),[Homepage >>](https://duckdb.org/),[Homepage >>](https://db-engines.com/en/system/TiDB),[Homepage >>](https://www.singlestore.com/)
<b>Primary database model</b>,,FALSE,Relational DBMS,Relational DBMS,Relational DBMS,Relational DBMS ,Relational DBMS ,Relational DBMS  ,Document store<br>Relational DBMS,Relational DBMS ,Relational DBMS ,Relational DBMS ,Relational DBMS ,Relational DBMS 
<b>Secondary database model</b>,,FALSE,Document store<br>Graph DBMS<br>RDF store<br>Spatial DBMS,Document store<br>Spatial DBMS,Document store<br>Graph DBMS<br>Spatial DBMS,,Document store<br>Wide column store,,,Time Series DBMS,,,Document store,Document store<br>Spatial DBMS<br>Time Series DBMS<br>Vector DBMS
<b>Distributed architecture</b>,,FALSE,:n:,:n:,:n:,:y:<br>[Distributed OLTP](https://www.cidrdb.org/cidr2023/papers/p50-ziegler.pdf),:y:<br>[Distributed OLTP](https://www.cidrdb.org/cidr2023/papers/p50-ziegler.pdf),:y:,:y:,,,:n:,:y:,:y:
<b>Open source</b>,,FALSE,:n:,:u:<br>GPLv2 or proprietary,:y:<br>PostgreSQL License,:u:<br>Open Source<br>[Closed-source for enterprise features](https://www.cockroachlabs.com/docs/stable/enterprise-licensing),:y:<br>Apache 2.,:n:,:n:,:y:<br>Apache 2.,:y:<br>Apache 2.,:y:<br>MIT,:y:<br>Apache 2.,:n:
<b>Release notes</b>,,FALSE,[Release notes](https://docs.oracle.com/en/database/oracle/oracle-database/index.html),[Release notes](https://dev.mysql.com/doc/relnotes/mysql/8.0/en/),[Release notes](https://www.postgresql.org/docs/release/),[Release notes](https://forum.cockroachlabs.com/c/announcements/release-notes/9),[Release notes](https://docs.yugabyte.com/preview/releases/),[Release notes](https://docs.snowflake.com/en/release-notes/new-features),[Release notes](https://docs.databricks.com/en/release-notes/product/index.html),[Release notes](https://clickhouse.com/docs/en/whats-new/changelog),[Release notes](https://github.com/apache/doris/labels/release%20notes),[Release notes](https://github.com/duckdb/duckdb/releases/),[Release notes](https://docs.pingcap.com/tidb/stable/release-notes),[Release notes](https://docs.singlestore.com/cloud/release-notes/)
<b>Blog</b>,,FALSE,[Blog](https://blogs.oracle.com/),[Blog](https://blogs.oracle.com/mysql/),[Announcements](https://www.postgresql.org/list/pgsql-announce/),[Blog](),[Blog](https://www.yugabyte.com/blog/),[Blog](https://community.snowflake.com/s/blog),[Blog](https://www.databricks.com/blog),[Blog](https://clickhouse.com/blog?category=engineering),[Blog](https://doris.apache.org/blog/),[Blog](https://duckdb.org/news/),[Blog](https://www.pingcap.com/blog/),[Blog](https://www.singlestore.com/blog/)
<b>Deployment</b>,,FALSE,On-premise / Cloud,On-premise / Cloud,On-premise / Cloud,On-premise / Cloud,On-premise / Cloud,Cloud,Cloud,On-premise / Cloud,On-premise / Cloud,On-premise / Cloud,On-premise / Cloud,On-premise / Cloud
<b>Language</b>,,FALSE,C and C++,C; C++,C,Go; C++,C; C++,C++; Java,Scala; C++,C++,,C++,Go; Rust,C++
<b>Git repo</b>,,FALSE,n/a,[Link](https://github.com/mysql/mysql-server),[Link](https://github.com/postgres/postgres),[Link](https://github.com/cockroachdb/cockroach),[Link](https://github.com/yugabyte/yugabyte-db),n/a,n/a,[Link](https://github.com/ClickHouse/ClickHouse),[Link](https://github.com/apache/doris),[Link](https://github.com/duckdb/duckdb),[Link](https://github.com/pingcap/tidb),n/a
<b>Strategy</b>,,FALSE,[Expand Oracle Oracle Cloud Infrastructure (OCI)](https://accelerationeconomy.com/cloud-wars/cloud-wars-minute/oracles-larry-ellison-hundreds-of-data-centers/),,,,,[Unistore: a HTAP solution](https://www.snowflake.com/blog/introducing-unistore/)<br>[Nvidia inside of Snowflake](https://www.snowflake.com/blog/llm-model-factory-snowflake-nvidia/)<br>[Iceberg open tables](https://www.snowflake.com/blog/iceberg-tables-powering-open-standards-with-snowflake-innovations/),[Semantic analytics layer](https://www.youtube.com/watch?v=1BXn6Npb_BU),[Roadmap](https://github.com/ClickHouse/ClickHouse/issues/44767),[Roadmap](https://doris.apache.org/blog/summit/),,,
<div class = 'item-title'>Background</div>,,FALSE,,,,,,,,,,,,
<b>Organization</b>,,FALSE,Oracle,Oracle,PostgreSQL Global Development Group,Cockroach Labs,Yugabyte,Snowflake Inc.,Databricks,ClickHouse Inc.,Apache Doris ,DuckDB Labs,PingCAP,SingleStore
<b>Founders/management</b>,,FALSE,[Larry Ellison](https://www.linkedin.com/in/larry-ellison-5a4a84157/)<br>Bob Miner<br>Ed Oates,[Michael Widenius](https://www.linkedin.com/in/montywi/),[Michael Stonebreaker](https://www.linkedin.com/in/michael-stonebraker-1064661a),[S. Kimball (CEO)](https://www.linkedin.com/in/spencerwkimball)<br>[Peter Mattis (CTO)](https://www.linkedin.com/in/peter-mattis-46549144/)<br>Ben Darnell,[Bill Cook (CEO)](https://www.linkedin.com/in/cookbill/)<br>[Karthik R. (CTO)](https://www.linkedin.com/in/kranganathan/)<br>[Kannan M.](https://www.linkedin.com/in/kannanmuthukkaruppan/)<br>[Mikhail Bautin](https://www.linkedin.com/in/mikhailbautin/),[Frank Slootman (CEO)](https://www.linkedin.com/in/frankslootman/)<br>[Benoît Dageville](https://www.linkedin.com/in/benoit-dageville-3011845/)<br>[Thierry Cruanes](https://www.linkedin.com/in/thierry-cruanes-3927363/)<br>[Marcin Żukowski](https://www.linkedin.com/in/marcinzukowski/),[Ali Ghodsi (CEO)](https://www.linkedin.com/in/alighodsi/)<br>[Andy Konwinski](https://www.linkedin.com/in/andykon/)<br>[Ion Stoica](https://www.linkedin.com/in/ionstoica/)<br>[Patrick Wendell](https://www.linkedin.com/in/patrick-wendell/)<br>[Reynold Xin](https://www.linkedin.com/in/rxin/)<br>[Matei Zaharia](https://www.linkedin.com/in/mateizaharia/)<br>[Arsalan Tavakoli](https://www.linkedin.com/in/arsalantavakoli/),[Aaron Katz (CEO)](https://www.linkedin.com/in/aaron-katz-5762094/)<br>[Alexey Milovidov (CTO)](https://www.linkedin.com/in/alexey-milovidov-7b658135/)<br>[Yury Izrailevsky](https://www.linkedin.com/in/yuryizrailevsky/),[Mingyu Chen](https://www.linkedin.com/in/%E9%99%88%E6%98%8E%E9%9B%A8-chen-mingyu-a2b40154/),[Hannes Mühleisen](https://www.linkedin.com/in/hfmuehleisen/)<br>[Mark Raasveldt](https://www.linkedin.com/in/mark-raasveldt-256b9a70/),[Max Liu](https://www.linkedin.com/in/max-liu-0b2390147/)<br>[Edward Huang](https://www.linkedin.com/in/eddxhuang/)<br>[Dylan Cui](https://www.linkedin.com/in/dylan-cui-39111467/),[Raj Verma (CEO)](https://www.linkedin.com/in/rajvermaceo/)<br>[Eric Frenkiel](https://www.linkedin.com/in/ericfrenkiel/)<br>[Nikita Shamgunov](https://www.linkedin.com/in/nikitashamgunov/)<br>[Adam Prout](https://www.linkedin.com/in/adam-prout-0b347630/)
<b>Developers</b>,,FALSE,n/a,[Magnus Blåudd](https://www.linkedin.com/in/blaudden/)<br>[Mauritz Sundell](https://www.linkedin.com/in/mauritz-sundell-0bb433/)<br>[John David Duncan](https://www.linkedin.com/in/johndavidduncan/)<br>[Other contributors](https://github.com/mysql/mysql-server/graphs/contributors),Tom Lane<br>[Bruce Momjian](https://www.linkedin.com/in/bruce-momjian-74ab7b1/)<br>[Peter Eisentraut](https://www.linkedin.com/in/petereisentraut/)<br>[Other contributors](https://github.com/postgres/postgres/graphs/contributors),[Other contributors](https://github.com/cockroachdb/cockroach/graphs/contributors),[Other contributors](https://github.com/yugabyte/yugabyte-db/graphs/contributors),n/a,[Other contributors](),[Alexey Milovidov (CTO)](https://www.linkedin.com/in/alexey-milovidov-7b658135/)<br>[Alexander Sapin](https://www.linkedin.com/in/alexander-sapin-1839b4161/)<br>[Other contributors](https://github.com/ClickHouse/ClickHouse/graphs/contributors),[Mingyu Chen](https://www.linkedin.com/in/%E9%99%88%E6%98%8E%E9%9B%A8-chen-mingyu-a2b40154/)<br>[Other contributors](https://github.com/apache/doris/graphs/contributors),[Hannes Mühleisen](https://www.linkedin.com/in/hfmuehleisen/)<br>[Mark Raasveldt](https://www.linkedin.com/in/mark-raasveldt-256b9a70/)<br>[Other contributors](https://github.com/duckdb/duckdb/graphs/contributors),[Other contributors](https://github.com/pingcap/tidb/graphs/contributors) ,n/a
<b>Founded</b>,,FALSE,1977,1995,1996,2015,2016,,2013,2012,2017,2019,2017,
<b>Headquarters</b>,,FALSE,Austin; TX; US,Redmond; WS; US,,New York; NY; US,Sunnyvale; CA; US,Bozeman; MT; US,SF; CA; US,Redwood City; CA; US,,AMS; NL,Sunnyvale; CA; US,SF; CA; US
<div class = 'item-title'>Query processor</div>,,FALSE,,,,,,,,,,,,
<b>Query parser</b>,,FALSE,[Oracle](https://docs.oracle.com/en/database/oracle/oracle-database/19/cncpt/sql.html#GUID-B3F2B5B8-B679-4A7C-B1E8-286F36319FCB),MySQL,[PostgreSQL](https://www.postgresql.org/docs/current/parser-stage.html)<br>[Query processing](https://www.interdb.jp/pg/pgsql03.html) [3](https://wiki.postgresql.org/wiki/Query_Parsing),[PostgeSQL](https://www.cockroachlabs.com/docs/stable/architecture/sql-layer),[PostgreSQL](https://github.com/pganalyze/libpg_query),Snowflake SQL,Databricks SQL,[Clickhouse](https://chistadata.com/clickhouse-parser-internals/),[MySQL](https://medium.com/@ApacheDoris/introduction-to-apache-doris-incubating-48aaa1df34ae),PostgreSQL [1](https://github.com/duckdb/duckdb/tree/master/third_party/libpg_query)[2](https://github.com/pganalyze/libpg_query),[MySQL](https://pingcap.github.io/tidb-dev-guide/understand-tidb/parser.html)[2](https://www.pingcap.com/blog/the-beauty-of-htap-tidb-and-alloydb-as-examples/),MySQL
<b>[Query Optimization](http://www.redbook.io/ch7-queryoptimization.html)</b>,To get efficient query plans; one needs dynamic-programming-based query optimization; informed by good statistics: typically a combination of table samples (that allow to detect correlated predicates within a table) and hyperloglogs on most data to estimate distinct counts [17](https://db.in.tum.de/~freitag/papers/p29-neumann-cidr20.pdf). [URL#1](https://dione.lib.unipi.gr/xmlui/bitstream/handle/unipi/15010/Query%20Optimization%20with%20Deep%20Learning%20Architectures.pdf?sequence=1&isAllowed=y),FALSE,Cost-based optimizer [1](https://docs.oracle.com/en/database/oracle/oracle-database/19/cncpt/sql.html#GUID-69CB14DE-1BA4-43DE-86F3-34CE835BD622)[2](https://www.relationaldbdesign.com/sql-tuning/module2/sql-optimizer-modes.php#:~:text=RBO%20uses%20a%20static%20set;more%20efficient%20and%20adaptable%20optimization.),Cost-based optimizer,[Pure cost-based optimizer](https://www.postgresql.org/docs/current/planner-optimizer.html) [2](https://www.interdb.jp/pg/pgsql03.html#_3.1.4.),[Cost-based optimizer](https://www.cockroachlabs.com/docs/stable/cost-based-optimizer),[PostgreSQL's cost-based optimizer](https://docs.yugabyte.com/preview/explore/query-1-performance/pg-hint-plan/),Cost-based optimizer,[Cost-based optimizer & RBO?](https://www.advancinganalytics.co.uk/blog/2021/10/11/databricks-execution-plans); Catalyst Optimizer,[RBO](https://www.alibabacloud.com/help/en/hologres/user-guide/migrate-data-from-clickhouse-to-hologres),[CBO (join reorder) & RBO (constant folding; subquery rewriting; predicate pushdown](https://medium.com/@ApacheDoris/introduction-to-apache-doris-incubating-48aaa1df34ae),[CBO (join reorder) & RBO (expression rewriting; predicate pushdown](https://github.com/duckdb/duckdb/tree/master/src#optimizer),Query Optimizer<br>[Hybrid Row/Column Scan](https://dl.acm.org/doi/pdf/10.1145/3514221.3522565) [2](https://pingcap.github.io/tidb-dev-guide/understand-tidb/planner.html),Cost-based optimizer <br>[Paper](https://www.vldb.org/pvldb/vol9/p1401-chen.pdf)
<b>Scan nodes</b>,Produce rows from underlying table data,FALSE,Index unique scan; index range scan; index full scan; index fast full scan; table access by index rowid; table access full,Eq_ref; ref; index; all; using index,[Seq scan; index scan; index only scan; bitmap scan; TID scan](https://pganalyze.com/docs/explain/scan-nodes),,,,,,,,,
<b>Join nodes</b>,Combine rows from child nodes,FALSE,Nested loop joins; hash join; merge join,,[Nested loops; hash join; merge join](https://pganalyze.com/docs/explain/join-nodes) [URL2](https://www.interdb.jp/pg/pgsql0303.html),,,,,,,,,
<b>Other nodes</b>,Broad variety of functionality (e.g. aggregation; limiting; grouping; sorting etc),FALSE,Sort order by; sort order by stopkey; sort group by; sort group by nosort; hash group by,,[Sort; groupAggregate; hashAggregate](https://pganalyze.com/docs/explain/other-nodes),,,,,,,,,
<div class = 'item-title'>Execution</div>,,FALSE,,,,,,,,,,,,
<b>[Processing model](https://www.youtube.com/watch?v=L5NhM7kw6Eg)</b>,,FALSE,Iterator [1](https://docs.oracle.com/en/database/oracle/oracle-database/19/cncpt/sql.html#GUID-503B4218-AF0A-4A39-A1DD-F55C1C7D1BAA),Iterator,Iterator,,,Vectorized,Vectorized,Vectorized,Vectorized,Vectorized,[Vectorized](https://www.pingcap.com/blog/the-beauty-of-htap-tidb-and-alloydb-as-examples/),Vectorized?
<b>[Process model](https://dsf.berkeley.edu/papers/fntdb07-architecture.pdf)</b>,,FALSE,Process per DBMS worker [1](https://docs.oracle.com/en/database/oracle/oracle-database/19/cncpt/process-architecture.html#GUID-85D9852E-5BF1-4AC0-9E5A-49F0570DBD7A),Thread per DBMS worker,[Process per DBMS worker](https://www.interdb.jp/pg/pgsql02.html#_2.1.)<br>[Discussions about moving to single-process; multi-threaded architecture](https://www.postgresql.org/message-id/31cc6df9-53fe-3cd9-af5b-ac0d801163f4%40iki.fi),,Thread pool ,Thread pool ,Thread pool ,[Thread pool ](https://clickhouse.com/docs/knowledgebase/how-to-increase-thread-pool-size),,Thread per DBMS worker,[TiKV thread pool](https://docs.pingcap.com/tidb/stable/tune-tikv-thread-performance),Thread per DBMS worker
<b>Parallel query execution [1](https://people.eecs.berkeley.edu/~brewer/cs262/5-dewittgray92.pdf)[2](https://www.cut.ac.cy/digitalAssets/122/122275_1002013-FnTDB-Survey.pdf)</b>,,FALSE,:n:,:n:,:n:,:n:,:n: [1](https://medium.com/yugabyte/the-power-of-one-building-a-data-platform-that-unlocks-the-value-of-data-88242f56bb3e),:y:<br>MPP,:y:<br>MPP,:y:<br>[MPP](https://www.alibabacloud.com/blog/the-open-source-real-time-data-warehouse-solution-based-on-emr-olap---clickhouse-transaction-implementation_598583),:y:<br>MPP,:n:,:y: MPP mode available [1](https://docs.pingcap.com/tidb/dev/explain-mpp),:y: [1](https://www.singlestore.com/blog/scale-your-speed/)
<b>SIMD</b>,,FALSE,,,,,,,,[Implicit / Explicit SIMD](https://twitter.com/ClickHouseDB/status/1577699094247706625) [2](https://chistadata.com/clickhouses-vectorized-query-processing-unleashing-columnar-power/),,[Implicit SIMD](https://twitter.com/sumercip/status/1577025659888549888),,
<b>Bulk APIs/algebras</b>,[The interface between query operators should not be a single-value-at-a-time; but rather be framed in terms of sets.](https://www.cidrdb.org/cidr2023/papers/p66-wolde.pdf),FALSE,,,,,,,,,,,,
<div class = 'item-title'>Storage</div>,,FALSE,,,,,,,,,,,,
<b>Storage architecture</b>,,FALSE,Row store + optional in-memory column store,Row store,Row store,Distributed key-value store,Distributed key-value store,Column store,Column store,[Column store](https://chistadata.com/analyzing-performance-exploring-columnar-stores-vs-row-based-databases/),Column store,[In-memory column store](https://github.com/duckdb/duckdb/tree/master/src/storage),[Distributed row store + column store replica](https://dl.acm.org/doi/pdf/10.1145/3514221.3522565),[Distributed row store + column store replica](https://dl.acm.org/doi/pdf/10.1145/3514221.3522565)<br>Distributed RDBMS that combines an in-memory row-oriented and a disc-based column-oriented storage
<b>Storage engine</b>,Engine responsible for allocating and managing the storage of the ,FALSE,Oracle ASM [1](https://docs.oracle.com/en/database/oracle/oracle-database/19/cncpt/physical-storage-structures.html#GUID-7FEC2249-4A21-4967-B951-8979D72030AF),[InnoDB (default)](https://dev.mysql.com/doc/refman/8.0/en/innodb-storage-engine.html)<br>[MyISAM](https://dev.mysql.com/doc/refman/8.0/en/myisam-storage-engine.html)<br>[Memory](https:/<br>ev.mysql.com/doc/refman/8.0/en/memory-storage-engine.html)<br>Other (csv; archive; blackhole; merge; federated),,[Custom RocksDB engine: Pebble](https://www.cockroachlabs.com/docs/stable/architecture/storage-layer),[Custom RocksDB engine](https://docs.yugabyte.com/preview/architecture/layered-architecture/)[2](https://github.com/facebook/rocksdb),Native Snowflake<br>Iceberg tables [1](https://docs.snowflake.com/en/user-guide/tables-clustering-micropartitions)[2](https://www.youtube.com/watch?v=Vfyw7mZFwBU&t) [3](https://www.snowflake.com/blog/5-reasons-apache-iceberg/),[Delta Lake](https://delta.io/),[Main engine: Merge tree](https://github.com/ClickHouse/ClickHouse/issues/2161)<br>[Different table engines](https://clickhouse.com/docs/en/engines/table-engines#engine-families),Iceberg<br>Hudi<br>Hive,DuckDB Storage Engine,TiKV Storage Engine,SingleStore Storage Engine
<b>File storage</b>,,FALSE,,,[Local file system](),,,[S3; GCS; Azure](https://docs.snowflake.com/en/user-guide/intro-cloud-platforms),[S3; GCS; Azure](https://docs.databricks.com/en/storage/index.html),[Local file system (default); S3; HDFS](https://clickhouse.com/docs/en/operations/storing-data),[S3; HDFS](https://doris.apache.org/docs/dev/lakehouse/file/),n/a,[Local file system](https://docs.pingcap.com/tidb/stable/tidb-storage),[Local file system]()
<b>Index support</b>,,FALSE,[B-tree (default)](https://docs.oracle.com/en/database/oracle/oracle-database/19/cncpt/indexes-and-index-organized-tables.html#GUID-FC93A85B-C237-4249-AD1E-FF54576ED050); [Bitmap](https://docs.oracle.com/en/database/oracle/oracle-database/19/cncpt/indexes-and-index-organized-tables.html#GUID-B15C4817-7748-456D-9740-8B9628AF9F47);  [Function-based](https://docs.oracle.com/en/database/oracle/oracle-database/19/cncpt/indexes-and-index-organized-tables.html#GUID-9AD7651D-0F0D-4FC6-A984-5845F0224EE6); [Application Domain](https://docs.oracle.com/en/database/oracle/oracle-database/19/cncpt/indexes-and-index-organized-tables.html#GUID-9586EB86-4B84-4A43-A66D-958776FE558B); [Index Organized Table](https://docs.oracle.com/en/database/oracle/oracle-database/19/cncpt/indexes-and-index-organized-tables.html#GUID-797E49E6-2DCE-4FD4-8E4A-6E761F1383D1),B-tree (default); Hash; Spatial; Full-text (inverted lists) [1](https://dev.mysql.com/doc/refman/8.0/en/mysql-indexes.html),[B-tree (default)](https://www.postgresql.org/docs/current/btree.html); [Hash](https://www.postgresql.org/docs/current/hash-index.html); [GiST](https://www.postgresql.org/docs/current/gist.html); [GIN](https://www.postgresql.org/docs/current/gin.html); [SP-GiST](https://www.postgresql.org/docs/current/spgist.html); [BRIN](https://www.postgresql.org/docs/current/brin.html),[RocksDB](https://github.com/facebook/rocksdb),B-tree; Hash; Range; JSONB; JSONPath; Full-text; GIN; Time-Series; Bloom,[No index support](); [Search optimization service available](https://docs.snowflake.com/en/user-guide/search-optimization-service),B-tree; Bitmap; Bloom; Delta; Geospatial; Z-order,,,B-tree; ART; BitWeaving; Bitmap; Min-Max; Z-order; R-tree; Inverted Lists,B-tree; Hash; Clustered; Non-clustered; Full-text; Spatial; JSON; Unique; Bitmap; Time-Series,B-tree; Columnstore; Full-text; Geospatial
<b>Table and page compression</b>,,FALSE,,[Link](https://dev.mysql.com/doc/refman/8.0/en/innodb-compression.html),,,[DocDB (responsible for transactions; sharding; replication and storage (custom RocksDB engine))](https://docs.yugabyte.com/preview/architecture/layered-architecture/),,,,,,,
<b>Data-at-Rest encryption</b>,,FALSE,,,,,,,,,,,,
<b>Locking granularity</b>,,FALSE,,[Link](https://dev.mysql.com/doc/refman/8.0/en/innodb-compression.html),[PostgreSQL locks](https://pglocks.org/),,,,,,,,,
<b>Cluster database support</b>,,FALSE,,,,,,,,,,,,
<div class = 'item-title'>Catalog</div>,,FALSE,,,,,,,,,,,,
<b>Catalog</b>,,FALSE,Data Dictionary,[Data Dictionary](https://dev.mysql.com/doc/refman/8.0/en/data-dictionary.html),[System Catalog](https://www.postgresql.org/docs/current/catalogs.html),[System Catalog](https://www.cockroachlabs.com/docs/stable/system-catalogs),System Catalog,Information Schema,Metastore,,,Information Schema,Information Schema,Information Schema
<div class = 'item-title'>Transaction</div>,The transaction manager manages all currently open transactions; and is in charge of handling COMMIT or ROLLBACK commands.,FALSE,,,,,,,,,,,,
<b>Default Isolation level [1](https://jepsen.io/consistency)[2](https://www.yugabyte.com/blog/cockroachdb-vs-aurora-vs-yugabyte-db-performance-benchmarks-isolation-level-effects/)[3](https://memgraph.com/blog/acid-transactions-meaning-of-isolation-levels)</b>,,FALSE,Read Committed,Repeatable Read,Read Committed,[Serializable isolation](https://www.cockroachlabs.com/docs/stable/demo-serializable),Snapshot [1](https://www.yugabyte.com/blog/cockroachdb-vs-aurora-vs-yugabyte-db-performance-benchmarks-isolation-level-effects/)[2](https://docs.yugabyte.com/preview/architecture/transactions/isolation-levels/),[Read committed](https://docs.snowflake.com/en/sql-reference/transactions#isolation-level),[Write Serializable](https://docs.databricks.com/en/optimizations/isolation-level.html),[No multi-statement transaction support](https://github.com/ClickHouse/ClickHouse/issues/22086),,Snapshot,,
<b>Other supported isolation levels</b>,,FALSE,,,,,,,Serializable,,,,,
<b>Concurrency control</b>,,FALSE,[MVCC](https://dbdb.io/db/oracle-rdbms),[MVCC](https://dbdb.io/db/mysql),[MVCC](https://dbdb.io/db/postgresql) [2](https://franckpachot.medium.com/mvcc-in-oracle-vs-postgres-and-a-little-no-bloat-beauty-e3a04d6a8bd2),[MVCC](https://dbdb.io/db/cockroachdb),[MVCC<br>OCC](https://dbdb.io/db/yugabytedb),[MVCC](https://dbdb.io/db/snowflake),[MVCC<br>OCC](https://dbdb.io/db/delta-lake),[No multi-statement transaction support](https://github.com/ClickHouse/ClickHouse/issues/22086),[URL](https://dbdb.io/db/doris),[MVCC](https://duckdb.org/why_duckdb.htmlttps://dbdb.io/db/duckdb),[MVCC](https://dbdb.io/db/tidb),[MVCC](https://dbdb.io/db/singlestore)
<b>Transactional processing</b>,,FALSE,,,,,,,,,,,[2PC+Raft+Logging](https://dl.acm.org/doi/pdf/10.1145/3514221.3522565),
<b>2PC</b>,,FALSE,:y:,:n:,:y:,,:y:,:n:,:n:,,,:n:,:n:,:n:
<div class = 'item-title'>Access methods</div>,,FALSE,,,,,,,,,,,,
<b>APIs and other access methods</b>,,FALSE,JDBC; ODBC; ODP.NET; OCI,[ADO.NET; JDBC; ODBC; Proprietary native API](https://dev.mysql.com/doc/refman/8.0/en/connectors-apis.html),ADO.NET; JDBC; native C library; ODBC; streaming API for large objects,JDBC,JDBC; YCQL; YSQL,CLI Client; JDBC; ODBC,JDBC; ODBC; REST API,HTTP; REST; JDBC; ODBC; Proprietary protocol,,CLI Client; JDBC,GORM; JDBC; ODBC; Proprietary protocol; SQLAlchemy,Cluster Management API; info HTTP API; JDBC; MongoDB API; ODBC
<b>[ADBC support](https://arrow.apache.org/adbc/current/index.html)</b>,,FALSE,:n:,:n:,:n:,,,:y: [1](https://medium.com/snowflake/arrow-database-connectivity-adbc-support-for-snowflake-7bfb3a2d9074 )[2](),,,,[:y: 1](https://duckdb.org/2023/08/04/adbc.html),,
<div class = 'item-title'>Potpourri</div>,,FALSE,,,,,,,,,,,,
<b>Recovery mechanism</b>,,FALSE,Redo log files; undo segments; and control files,Binary log files; InnoDB redo log files; and InnoDB undo log files,Write-ahead logging (WAL) files,Raft consensus protocol and distributed backups,Raft consensus protocol and distributed backups,Replication groups and failover groups,Delta Lake transaction log and cloud storage snapshots,ReplicatedMergeTree engine and ZooKeeper coordination service,Distributed backups and restores,[Write-ahead logging (WAL) files](https://www.interdb.jp/pg/pgsql09.html),Percolator transaction model and distributed backups,High availability groups and snapshots
<b>Analytical processing</b>,,FALSE,,,,,,,,,,,[Log-based Delta and Column Scan](https://dl.acm.org/doi/pdf/10.1145/3514221.3522565),
<b>Data Synchronization</b>,,FALSE,,,,,,,,,,,[Log-based Delta Merge](https://dl.acm.org/doi/pdf/10.1145/3514221.3522565),
<b>Replication and sharding</b>,,FALSE,:y:,:y:,:y:,,:y:,:y:,:n:,,,:n:,:y:,:y:
<b>Extra links for later research</b>,,FALSE,,,[URL](https://www.hydra.so/blog-posts/2022-12-13-how-we-built-fastest-postgres-db-for-analytics#Parallelization)<br>[The part we hate](https://ottertune.com/blog/the-part-of-postgresql-we-hate-the-most/)<br>[Vs Yugabyte](https://franckpachot.medium.com/which-postgresql-problehttps://rbranson.medium.com/10-things-i-hate-about-postgresql-20dbab8c2791ms-are-solved-with-yugabytedb-7e479df472ba)<br>[10 things I hate](),,[Comparison](https://docs.yugabyte.com/preview/faq/comparisons/postgresql/)<br>[Performance](https://www.yugabyte.com/blog/achieving-10x-better-distributed-sql-performance-in-yugabytedb-2-1/),,[1](https://www.databricks.com/discover/pages/optimize-data-workloads-guide),[vectorization or JIT compilation? Look at ClickHouse; it is using both](https://clickhouse.com/blog/introducing-click-house-inc)<br>[Next Clickhouse DB](https://thenewstack.io/why-clickhouse-should-be-your-next-database/)<br>[Pros/cons](https://altinity.com/wp-content/uploads/2022/05/Percona-2022-Building-Fast-Clickhouse-Analytics-for-MySQL-Transaction-Data-using-Kubernetes-2022-05-17.pdf)<br>[Comparison](https://rockset.com/comparison/clickhouse-vs-starrocks/)[Comparison 2](https://altinity.com/blog/database-on-fire-reflections-on-embedding-clickhouse-in-firebolt),,,[Distributed row store coprocessor + MPP columnar engine](https://www.pingcap.com/blog/the-beauty-of-htap-tidb-and-alloydb-as-examples/)[2](https://pingcap.github.io/tidb-dev-guide/understand-tidb/execution.html) ,[URL](https://www.pingcap.com/blog/real-world-htap-a-look-at-tidb-and-singlestore-and-their-architectures/)
<b>Extensions</b>,,FALSE,,,[Hydra](https://github.com/hydradatabase/hydra)<br>[Supabase](https://github.com/supabase/supabase),,,,,,,,,
<b>[SQL/PGQ support](https://www.cidrdb.org/cidr2023/papers/p66-wolde.pdf)</b>,,FALSE,,,,,,,,,,,,
<b>Scale-out (optional)</b>,,FALSE,,,,:y:,:y:,,,,,,,
<b>Market leaders</b>,,FALSE,Market Leader,Market Leader,Market Leader,Challenger,Challenger,Market Leader,Market Leader,Market Leader,,Disruptor,Disruptor,Disruptor
<b>DB-engines URL</b>,,FALSE,[URL](https://db-engines.com/en/system/Oracle),[URL](https://db-engines.com/en/system/MySQL),[URL](https://db-engines.com/en/system/PostgreSQL),[URL](https://db-engines.com/en/system/CockroachDB),[URL](https://db-engines.com/en/system/YugabyteDB),[URL](https://db-engines.com/en/system/Snowflake),[URL](https://db-engines.com/en/system/Databricks),[URL](https://db-engines.com/en/system/ClickHouse),[URL](https://db-engines.com/en/system/Apache+Doris),[URL](https://db-engines.com/en/system/DuckDB),[URL](https://db-engines.com/en/system/TiDB),[URL](https://db-engines.com/en/system/SingleStore)
<b>DBDB URL</b>,,FALSE,[URL](https://dbdb.io/db/oracle-rdbms),[URL](https://dbdb.io/db/mysql),[URL](https://dbdb.io/db/postgresql),[URL](https://dbdb.io/db/cockroachdb),[URL](https://dbdb.io/db/yugabytedb),[URL](https://dbdb.io/db/snowflake),[URL](https://dbdb.io/db/delta-lake),[URL](https://dbdb.io/db/clickhouse),[URL](https://dbdb.io/db/doris),[URL](https://dbdb.io/db/duckdb),[URL](https://dbdb.io/db/tidb),[URL](https://dbdb.io/db/singlestore)
<b>Performance</b>,,FALSE,[URL](https://benchmark.clickhouse.com/),[URL](https://benchmark.clickhouse.com/),[URL](https://benchmark.clickhouse.com/),[URL](https://benchmark.clickhouse.com/),[URL](https://benchmark.clickhouse.com/),[URL](https://benchmark.clickhouse.com/),[URL](https://benchmark.clickhouse.com/),[URL](https://benchmark.clickhouse.com/),[URL](https://benchmark.clickhouse.com/),[URL](https://benchmark.clickhouse.com/),[URL](https://benchmark.clickhouse.com/),[URL](https://benchmark.clickhouse.com/)
<b>Arrow support</b>,[The DBMS can process and output Arrow data](https://twitter.com/andy_pavlo/status/1471208916457558018),FALSE,,,,,,,,,,,,
<b>Arrow native</b>,The DBMS uses arrow internally,FALSE,,,,,,,,,,,,
